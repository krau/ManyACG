name: Build and Release Static Binary

on:
  push:
    branches: [vips]
    tags: ["v*"]

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Setup image
        run: |
          cat > Dockerfile << 'EOF'
          FROM alpine:edge

          RUN apk add --no-cache \
              build-base \
              scons \
              go \
              vips-dev \
              vips \
              vips-poppler \
              vips-heif \
              glib-dev \
              binutils \
              patchelf \
              libjpeg-turbo-dev \
              libpng-dev \
              libwebp-dev \
              tiff-dev \
              openexr-dev \
              expat-dev \
              libxml2-dev \
              zlib-dev \
              python3 py3-pip py3-setuptools py3-wheel \
              pkgconf    
          RUN pip3 install staticx patchelf --break-system-packages

          WORKDIR /app
          COPY . .
          # TODO: build with version info
          RUN CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -o manyacg -ldflags="-s -w" .

          RUN staticx manyacg manyacg-static --strip --no-compress --loglevel DEBUG

          # 复制输出到 /output
          RUN mkdir -p /output && cp manyacg-static /output/
          EOF

          docker buildx build \
            --platform linux/amd64 \
            -t alpine-build \
            -f Dockerfile \
            --load .

          docker run --rm -v $(pwd)/output:/output alpine-build ls -la /output/manyacg-static || true
          docker cp $(docker create alpine-build):/output/manyacg-static ./output/manyacg-static

      - name: Verify static binary
        run: |
          file output/manyacg-static
          ldd output/manyacg-static || echo "Static build confirmed"

      - name: Upload static binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: manyacg-static
          path: output/manyacg-static
          retention-days: 30

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: output/manyacg-static
          fail_on_unmatched_files: true
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
