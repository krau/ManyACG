name: Build and Release Static Binary

on:
  push:
    branches: [vips]
    tags: ["v*"]

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build static binary with staticx
        run: |
          cat > Dockerfile << 'EOF'
          FROM archlinux:latest AS builder

          RUN pacman -Syu --noconfirm && \
              pacman -S --noconfirm --needed \
              base-devel \
              go \
              scons \
              libvips \
              libheif \
              poppler-glib \
              glib2 \
              binutils \
              patchelf \
              libjpeg-turbo \
              libpng \
              libwebp \
              libtiff \
              openexr \
              expat \
              libxml2 \
              libjxl \
              zlib \
              python \
              python-pip \
              pkgconf \
              openslide \
              imagemagick \
              git && \
              pacman -Scc --noconfirm

          RUN pip install --no-cache-dir staticx setuptools patchelf --break-system-packages

          WORKDIR /app

          COPY . .

          RUN go mod download

          RUN CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -o manyacg .

          RUN staticx manyacg manyacg-static --strip --no-compress --loglevel DEBUG && \
              mkdir -p /output && cp manyacg-static /output/

          FROM scratch AS export
          COPY --from=builder /output/manyacg-static /

          # end of Dockerfile
          EOF

          docker buildx build \
            --platform linux/amd64 \
            --target export \
            --output type=local,dest=./output \
            -f Dockerfile \
            .

      - name: Verify static binary
        run: |
          ls -lh output/
          file output/manyacg-static
          ldd output/manyacg-static || echo "Static build confirmed"

      - name: Upload static binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: manyacg-static
          path: output/manyacg-static
          retention-days: 30

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: output/manyacg-static
          fail_on_unmatched_files: true
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
